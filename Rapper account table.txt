public class AccountContactRecord {
@AuraEnabled
public static List<AccountWrapper> getAccountList(){

List<AccountWrapper> accountWrapperList = new List<AccountWrapper>();
for(Account acc :[Select id, name,Phone,ShippingCity,ShippingCountry,
(select firstName,lastName from contacts) from Account]){
AccountWrapper acw = new AccountWrapper();
acw.accountRec=acc;
acw.conList=acc.contacts;
}
return accountWrapperList;

}

public class AccountWrapper{
@auraEnabled
Public Account accountRec{get;set;}
@auraEnabled
public contact conList{get;set;}
@auraEnabled
public boolean showChild{get;set;}
}
}

**************************************************************

<aura:component implements="force:hasRecordId,flexipage:availableForRecordHome" controller="AccountContactRecord">
    <aura:attribute name="item" type="Account" required="false"></aura:attribute>
    <aura:handler name="init" value="{!this}" action="{!c.getAccountList}" />
    
    <div>
        <table>
            <tr><td><b>Name</b></td><td><b>Phone</b></td></tr><b>ShippingCountry</b><b>ShippingPostalCode</b>
            
            <aura:iteration items="{!v.Accc}" var="acc" >
                <tr>   
                    <td> {!acc.Name}  </td>
                     <td>{!acc.Phone}  </td> 
                    <td>{!acc.ShippingCountry} </td>
                    <td>{!acc.ShippingPostalCode}</td>
                    
                </tr>     
                <!-- <tr>   <aura:iteration items="{!v.acc.contacts}" var="con1" >
            
             <td>{!con1.lastName} </td> 
            
        </aura:iteration></tr> -->
            </aura:iteration>              
        </table>
        
    </div>
    
</aura:component>

***************************************************************
({
getActs : function(component)
{
var action = component.get('c.getAccountList');
action.setCallback(this, function(actionResult)
{
var Results=actionResult.getReturnValue();
component.set("v.Accc",Results);

});
$A.enqueueAction(action);

}
})